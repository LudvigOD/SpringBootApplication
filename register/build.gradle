
/**
 * Build file for the register application.
 */

plugins {
    id 'java'

    // I discovered these plugins, which makes the build process a lot easier!
    // Now, it just works out of the box, without any configuration. (\(^_^)/)
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'

    // This plugin is used to generate the Jacoco test coverage report
    // id 'jacoco'
}

// define variable with main class, used further down
ext {
    javaMainClass = "register.main.RegisterApplication"
}

// Specify where to look for dependencies
repositories {
    mavenCentral()
}

// Declare that the task testCompile requires the JUnit framework
dependencies {
    implementation project(':shared')

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-webflux
    implementation 'org.springframework.boot:spring-boot-starter-webflux:3.1.2'

}

test {
    useJUnitPlatform()

    // Enables detailed test logging
    // Note: We might want to exclude standardOut and standardError if our tests are too chatty
    testLogging {
        // Set options for log events
        events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'

        // Show detailed exceptions or not ('short' or 'full')
        exceptionFormat 'full'

        // Show standard out and error streams
        showStandardStreams true
    }

    // finalizedBy jacocoTestReport // Jacoco report is always generated after tests run
}

// jacocoTestReport {
//     dependsOn test // tests are required to run before generating the report
// }

